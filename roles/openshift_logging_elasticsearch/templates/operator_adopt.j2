apiVersion: "elasticsearch.redhat.com/v1alpha1"
kind: "Elasticsearch"
metadata:
  name: "{{ es_cluster_name }}"
spec:
  elasticsearchConfig:
    image: "{{ openshift_logging_elasticsearch_image }}"
    resources:
      limits:
{% if es_cpu_limit is defined and es_cpu_limit is not none and es_cpu_limit != '' %}
        cpu: "{{ es_cpu_limit }}"
{% endif %}
        memory: "{{ es_memory_limit }}"
      requests:
        cpu: "{{ es_cpu_request }}"
        memory: "{{ es_memory_limit }}"
  nodes:
{% for node in es_cluster_nodes %}
    - nodeRole: clientdatamaster
      replicas: {{ node['replicas'] }}
      elasticsearchConfig:
        image: "{{ node['containers']['elasticsearch']['image'] }}"
        resources:
          limits:
{% if node['containers']['elasticsearch']['resources']['limits']['cpu'] is defined %}
            cpu: "{{ node['containers']['elasticsearch']['resources']['limits']['cpu'] }}"
{% endif %}
            memory: "{{ node['containers']['elasticsearch']['resources']['limits']['memory'] }}"
          requests:
            cpu: "{{ node['containers']['elasticsearch']['resources']['requests']['cpu'] }}"
            memory: "{{ node['containers']['elasticsearch']['resources']['requests']['memory'] }}"
{% if node['nodeSelector'] is defined and node['nodeSelector'] is iterable %}
      nodeSelector:
{% for key, value in node['nodeSelector'].items() %}
        {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
      storage:
{% if node['volumes']['elasticsearch-storage'] is defined %}
          {{ node['volumes']['elasticsearch-storage'] | to_yaml }}
{% endif %}
{% endfor %}
{% for node in range(es_additional_nodes | int) %}
    - nodeRole: clientdatamaster
      replicas: 1
{% if es_node_selector is iterable and es_node_selector | length > 0 %}
      nodeSelector:
{% for key, value in es_node_selector.items() %}
        {{key}}: "{{value}}"
{% endfor %}
{% endif %}
      storage:
{% if openshift_logging_elasticsearch_storage_type == 'pvc' %}
          volumeClaimTemplate:
          - metadata:
              name: "{{ pvc_name }}"
            spec:
              accessModes: "{{ pvc_access_modes }}"
{% if pvc_storage_class_name is defined and pvc_storage_class_name is not none and pvc_storage_class_name != '' %}
              storageClassName: "{{ pvc_storage_class_name }}"
{% endif %}
              resources:
                requests:
                  storage: "{{ pvc_size }}"
{% elif openshift_logging_elasticsearch_storage_type == 'hostmount' %}
          hostPath:
            path: {{ openshift_logging_elasticsearch_hostmount_path }}
{% else %}
          emptydir: {}
{% endif %}
{% endfor %}
